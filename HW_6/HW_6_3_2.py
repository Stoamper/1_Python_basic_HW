'''
3. Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби. Известно,
что при хранении данных используется принцип: одна строка — один пользователь, разделитель между
значениями — запятая. Написать код, загружающий данные из обоих файлов и формирующий из них словарь:
ключи — ФИО, значения — данные о хобби. Сохранить словарь в файл. Проверить сохранённые данные.
Если в файле, хранящем данные о хобби, меньше записей, чем в файле с ФИО, задаём в словаре значение None.
Если наоборот — выходим из скрипта с кодом «1». При решении задачи считать, что объём данных в файлах
во много раз меньше объема ОЗУ.

Фрагмент файла с данными о пользователях (users.csv):
Иванов,Иван,Иванович
Петров,Петр,Петрович

Фрагмент файла с данными о хобби (hobby.csv):
скалолазание,охота
горные лыжи
'''
from itertools import zip_longest
from json import dump

user_dict = {}  # создаем пустой словарь для заполнения в конце программы

# создание файла с именами
with open('users_1.csv', 'w') as users:
    users.writelines(['Иванов,Алексей,Иванович', '\n', 'Петров,Петр,Петрович', '\n', 'Пупкин,Василий,Васильевич\n', 'Нестеров,Алесандр,Сергеевич'])
    # users.writelines(['Иванов,Иван,Иванович', '\n', 'Петров,Петр,Петрович'])  # тестовая строка для вывода 1

# создание файла с хобби
with open('hobbies_1.csv', 'w') as hobbies:
    hobbies.writelines(['скалолазание,охота', '\n', 'горные лыжи', '\n', 'квантовая механика'])

# подсчет количества строк в каждом файле
users_lines = sum(1 for line in open('users_1.csv', 'r'))
hobbies_lines = sum(1 for line in open('hobbies_1.csv', 'r'))

if users_lines < hobbies_lines:
    print('1 (данных о пользователях меньше, чем данных об их хобби)')  # если строк в фалей с пользователями меньше
else:
    with open('users_1.csv', 'r') as users:
        with open('hobbies_1.csv', 'r') as hobbies:
            user_dict = zip_longest(users.readlines(), hobbies.readlines(), fillvalue=None) # создаем словарь с именами и хобби
            with open('user_dict.txt', 'w') as f:
                dump(list(user_dict), f, ensure_ascii=False, indent=4)  # записываем словарь в файл









