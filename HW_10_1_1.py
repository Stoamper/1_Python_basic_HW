'''
1.	Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для  сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно.
Первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и пр.
'''

class Matrix:
    def __init__(self, user_lists):
        self.user_lists = user_lists

    # перегрузка метода __str__() для вывода матрицы в привычном виде
    def __str__(self):
        return '\n'.join(''.join(['%d\t' % i for i in row]) for row in self.user_lists)

    # перегрузка метода __add__() для сложения двух матриц
    def __add__(self, other):
        for i, j in enumerate(self.user_lists):
            if len(self.user_lists) != len(other.user_lists) or len(j) != len(other.user_lists[i]):
                print('Матрицы имеют различные размеры. Сложение невозможно')
                exit()
            else:
                result = [[self.user_lists[i][j] + other.user_lists[i][j] for j in range(len(self.user_lists[0]))] for i in range(len(self.user_lists))]
                return '\n'.join(''.join(['%d\t' % i for i in row]) for row in result)

tc_1 = Matrix([[1, 2], [3, 4]])
# tc_1 = Matrix([[1, 2], [3, 4], [5, 6]])   # Тестовая матрица для проверки исключительного случая
tc_2 = Matrix([[5, 6], [7, 8]])
print(f'Матрица 1 имеет вид: \n{tc_1}')
print(f'Матрица 2 имеет вид: \n{tc_2}')
print(f'Сумма матриц 1 и 2: \n{tc_1 + tc_2}')