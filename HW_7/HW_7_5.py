'''
5.	*(вместо 4) Написать скрипт, который выводит статистику для заданной папки в виде словаря,
в котором ключи те же, а значения — кортежи вида (<files_quantity>, [<files_extensions_list>]),
например:
    {
      100: (15, ['txt']),
      1000: (3, ['py', 'txt']),
      10000: (7, ['html', 'css']),
      100000: (2, ['png', 'jpg'])
    }
Сохраните результаты в файл <folder_name>_summary.json в той же папке, где запустили скрипт.
'''

import os

# создаем переменные для подсчета количества файлов по размерному критерию и с учетом ввода формата
size_up_to_100 = [0, '']
size_up_to_1000 = [0, '']
size_up_to_10000 = [0, '']

# создаем словарь, куда будем записывать данные по количеству файлов исходя из размера
sizes_dict = {
    'до 100 байт': 0,
    'до 1000 байт': 0,
    'до 10000 байт': 0
}

# переходим в ранее созданную директорию
dir = os.chdir('my_project/settings')

# создаем тестовый файл, чтобы он относился к другой группе по размеру
with open('test.txt', 'w') as f:
    for i in range(5):
        f.write('Some test information\n')

# определяем размер и формат каждого файла и записываем данные в ранее определенные переменные для словаря
print(f'В директории {os.getcwd()} содержатся следующие файлы:')
for item in os.listdir():
    size = os.stat(item).st_size    # определение размера
    print(item)
    format = item.strip().split('.')    # определение формата
    if size < 100:
        size_up_to_100[0] += 1
        # создаем условие для того, чтобы не записывались повторяющиеся форматы
        if format[1] != size_up_to_100[1]:
            size_up_to_100[1] = str(size_up_to_100[1]) + str(format[1])
    elif size >= 100 and size < 1000:
        size_up_to_1000[0] += 1
        # создаем условие для того, чтобы не записывались повторяющиеся форматы
        if format[1] != size_up_to_100[1]:
            size_up_to_1000[1] = str(size_up_to_1000[1]) + str(format[1])
    else:
        size_up_to_10000[0] += 1
        # создаем условие для того, чтобы не записывались повторяющиеся форматы
        if format[1] != size_up_to_100[1]:
            size_up_to_10000[1] = str(size_up_to_10000[1]) + str(format[1])

# записываем данные в словарь
sizes_dict['до 100 байт'] = size_up_to_100
sizes_dict['до 1000 байт'] = size_up_to_1000
sizes_dict['до 10000 байт'] = size_up_to_10000

# выводим словарь с итоговой информацией
print('По размерам их количество подразделяется (с указанием форматов):')
print(sizes_dict)
