'''
4.	Написать скрипт, который выводит статистику для заданной папки в виде словаря,
в котором ключи — верхняя граница размера файла (пусть будет кратна 10),
а значения — общее количество файлов (в том числе и в подпапках), размер которых
не превышает этой границы, но больше предыдущей (начинаем с 0), например:
    {
      100: 15,
      1000: 3,
      10000: 7,
      100000: 2
    }
Тут 15 файлов размером не более 100 байт; 3 файла больше 100 и не больше 1000 байт...
Подсказка: размер файла можно получить из атрибута .st_size объекта os.stat.
'''

import os

# создаем переменные для подсчета количества файлов по размерному критерию
size_up_to_100 = 0
size_up_to_1000 = 0
size_up_to_10000 = 0

# создаем словарь, куда будем записывать данные по количеству файлов исходя из размера
sizes_dict = {
    'до 100 байт': 0,
    'до 1000 байт': 0,
    'до 10000 байт': 0
}

# переходим в ранее созданную директорию
dir = os.chdir('my_project/settings')

# создаем тестовый файл, чтобы он относился к другой группе по размеру
with open('test.txt', 'w') as f:
    for i in range(5):
        f.write('Some test information\n')

# определяем размер каждого файла и записываем данные в ранее определенные переменные для словаря
print(f'В директории {os.getcwd()} содержатся следующие файлы:')
for item in os.listdir():
    size = os.stat(item).st_size
    print(item)
    # print('Файл', item, 'имеет размер',  size, 'байт')
    if size < 100:
        size_up_to_100 += 1
    elif size >= 100 and size < 1000:
        size_up_to_1000 += 1
    else:
        size_up_to_10000 += 1

# записываем данные в словарь
sizes_dict['до 100 байт'] = size_up_to_100
sizes_dict['до 1000 байт'] = size_up_to_1000
sizes_dict['до 10000 байт'] = size_up_to_10000

# выводим словарь с итоговой информацией
print('По размерам их количество подразделяется:')
print(sizes_dict)